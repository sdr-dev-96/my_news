security:
    providers:
        users:
            entity:
                class: App\Entity\User
                property: email
    encoders:
        App\Entity\User:
            algorithm: auto
    enable_authenticator_manager: true
    firewalls:
        main:
            entry_point: App\Security\AuthenticationEntryPoint
            lazy: true
            provider: users
            custom_authenticator: App\Security\LoginFormAuthenticator
            logout:
                path: app_logout
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        login:
            pattern: ^/api/login
            stateless: true
            anonymous: false
            json_login:
                check_path: /api/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        api:
            pattern: ^/api
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        classic:
            anonymous: false
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            logout:
                path:   app_logout

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/profil, roles: ROLE_USER }
    
    role_hierarchy:
        ROLE_ADMIN:     ROLE_AUTHOR
        ROLE_AUTHOR:    ROLE_USER
